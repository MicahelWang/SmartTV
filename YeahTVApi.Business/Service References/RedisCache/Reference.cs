//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HZTVApi.Business.RedisCache {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RedisCache.IRedisCacheService")]
    public interface IRedisCacheService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/Get", ReplyAction="http://tempuri.org/IRedisCacheService/GetResponse")]
        string Get(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/Set", ReplyAction="http://tempuri.org/IRedisCacheService/SetResponse")]
        bool Set(string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/SetWithExpireIn", ReplyAction="http://tempuri.org/IRedisCacheService/SetWithExpireInResponse")]
        bool SetWithExpireIn(string key, string value, System.TimeSpan expiresIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/AddItemToSet", ReplyAction="http://tempuri.org/IRedisCacheService/AddItemToSetResponse")]
        void AddItemToSet(string setId, string item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/GetAllItemsFromSet", ReplyAction="http://tempuri.org/IRedisCacheService/GetAllItemsFromSetResponse")]
        string[] GetAllItemsFromSet(string setId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/SetEntryInHash", ReplyAction="http://tempuri.org/IRedisCacheService/SetEntryInHashResponse")]
        bool SetEntryInHash(string hashId, string key, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/GetValueFromHash", ReplyAction="http://tempuri.org/IRedisCacheService/GetValueFromHashResponse")]
        string GetValueFromHash(string hashId, string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/GetValuesFromHash", ReplyAction="http://tempuri.org/IRedisCacheService/GetValuesFromHashResponse")]
        System.Collections.Generic.Dictionary<string, string> GetValuesFromHash(string hashId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/AddItemToSortSet", ReplyAction="http://tempuri.org/IRedisCacheService/AddItemToSortSetResponse")]
        bool AddItemToSortSet(string setId, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/GetAllItemsFromSortedSet", ReplyAction="http://tempuri.org/IRedisCacheService/GetAllItemsFromSortedSetResponse")]
        string[] GetAllItemsFromSortedSet(string setId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedisCacheService/GetRangeFromSortedSet", ReplyAction="http://tempuri.org/IRedisCacheService/GetRangeFromSortedSetResponse")]
        string[] GetRangeFromSortedSet(string setId, int fromRank, int toRank);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRedisCacheServiceChannel : HZTVApi.Business.RedisCache.IRedisCacheService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RedisCacheServiceClient : System.ServiceModel.ClientBase<HZTVApi.Business.RedisCache.IRedisCacheService>, HZTVApi.Business.RedisCache.IRedisCacheService {
        
        public RedisCacheServiceClient() {
        }
        
        public RedisCacheServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RedisCacheServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedisCacheServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RedisCacheServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Get(string key) {
            return base.Channel.Get(key);
        }
        
        public bool Set(string key, string value) {
            return base.Channel.Set(key, value);
        }
        
        public bool SetWithExpireIn(string key, string value, System.TimeSpan expiresIn) {
            return base.Channel.SetWithExpireIn(key, value, expiresIn);
        }
        
        public void AddItemToSet(string setId, string item) {
            base.Channel.AddItemToSet(setId, item);
        }
        
        public string[] GetAllItemsFromSet(string setId) {
            return base.Channel.GetAllItemsFromSet(setId);
        }
        
        public bool SetEntryInHash(string hashId, string key, string value) {
            return base.Channel.SetEntryInHash(hashId, key, value);
        }
        
        public string GetValueFromHash(string hashId, string key) {
            return base.Channel.GetValueFromHash(hashId, key);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetValuesFromHash(string hashId) {
            return base.Channel.GetValuesFromHash(hashId);
        }
        
        public bool AddItemToSortSet(string setId, string value) {
            return base.Channel.AddItemToSortSet(setId, value);
        }
        
        public string[] GetAllItemsFromSortedSet(string setId) {
            return base.Channel.GetAllItemsFromSortedSet(setId);
        }
        
        public string[] GetRangeFromSortedSet(string setId, int fromRank, int toRank) {
            return base.Channel.GetRangeFromSortedSet(setId, fromRank, toRank);
        }
    }
}
