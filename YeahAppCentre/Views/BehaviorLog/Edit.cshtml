@model BehaviorLog
@{
    OpType opType = ViewBag.OpType;
}

@Html.HiddenFor(m => m.Id)
<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.HotelId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.TextBox("HotelId", UtilityHelper.GetHotelName(@Model.HotelId), new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BehaviorType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BehaviorType, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DeviceSerise, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DeviceSerise, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BehaviorInfo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.BehaviorInfo, new { @class = "form-control", @style = "height:220px" })
        </div>
    </div>

</div>

@if (opType == OpType.View)
{
    <script>
        SetKeyReadonly();
    </script>
}
