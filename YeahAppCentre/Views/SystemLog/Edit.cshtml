@model YeahTVApi.DomainModel.MongoLog
@{
    OpType opType = ViewBag.OpType;
}

@Html.HiddenFor(m => m.Id)
<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.AppType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("AppType",((AppType)Enum.Parse(typeof(AppType), Model.AppType)).GetDescription())
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MessageType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBox("MessageType", ((LogType)Enum.Parse(typeof(LogType), Model.MessageType)).GetDescription())
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.MessageInfo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.MessageInfo, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MessageEx, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.MessageEx, new { @class = "form-control", @style = "height:220px" })
        </div>
    </div>

</div>

@if (opType == OpType.View)
{
    <script>
        SetKeyReadonly();
    </script>
}
