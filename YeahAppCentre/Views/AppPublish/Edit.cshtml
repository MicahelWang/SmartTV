@model  AppPublish
@using YeahTVApi.DomainModel.Enum
@{
    OpType opType = ViewBag.OpType;
}
<script src="~/Scripts/zTree/js/jquery.ztree.all-3.5.js"></script>
<script type="text/javascript">

    $(function () {
        $("form").removeData("validator").removeData("unobtrusiveValidation");
        $.validator.unobtrusive.parse($("form"));
        InitialDateTime();
        $('#IsAllHotel').on('click', function () {
            if ($("#IsAllHotel").is(":checked")) {
                $("#hotelIdCondition").val("ALL");
                $("#hotelIdDiv").fadeOut();
            }
            else {
                $("#hotelNameCondition").val("");
                $("#hotelIdDiv").fadeIn();
            }
        });
    });
    function InitialDateTime() {
        if ($("#PublishDate").val() != null) {
            $("#PublishDate").val("@DateTime.Now.ToDateTimeStr(DateFormate.yyyyMMddHHmm)");
        }
        
    }
</script>

<script src="~/Scripts/My97DatePicker/WdatePicker.js"></script>
<link href="~/Scripts/My97DatePicker/skin/WdatePicker.css" rel="stylesheet" />

@using (Ajax.BeginForm("Edit", new { }, new AjaxOptions
{
    HttpMethod = "Post",
    OnSuccess = "Success",


}, new { @class = "form-horizontal", role = "form" }))
{
    <input type="hidden" name="opType" value="@opType.GetValueStr()" />
    if (opType.Equals(OpType.View))
    {
        string hotelName=null;
        if (Model.HotelId.ToUpper().Equals("ALL"))
        {
            hotelName = "全部酒店";
        }
        else
        { hotelName = @Html.GetHotelName(Model.HotelId).ToString(); }
        <div class="form-group">
            @Html.LabelFor(model => model.HotelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("hotelName", hotelName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.App.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppVersion.App.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.VersionCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AppVersion.VersionCode, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.VersionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.AppVersion.VersionName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("PublishDate", Model.PublishDate.ToDateTimeStr(DateFormate.yyyyMMddHHmmss), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control disabled" } })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastUpdateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("LastUpdateTime", Model.LastUpdateTime.ToDateTimeStr(DateFormate.yyyyMMddHHmmss), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastUpdater, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastUpdater, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

    }
    else if (opType.Equals(OpType.Update))
    {
        
        @Html.HiddenFor(model => model.VersionCode)
        @Html.HiddenFor(model => model.HotelId)
        string hotelName = null;
        if (Model.HotelId.ToUpper().Equals("ALL"))
        {
            hotelName = "全部酒店";
        }
        else
        { hotelName = @Html.GetHotelName(Model.HotelId).ToString(); }
        <div class="form-group">
            @Html.LabelFor(model => model.HotelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.VersionCode)
                @*@Html.TextBoxFor(model => model.HotelId, hotelName, new { @readonly = "readonly" })*@
                @Html.TextBox("HotelName", hotelName, new  {@readonly="readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.App.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Id)
                @Html.DisplayTextFor(model => model.AppVersion.App.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.VersionCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DisplayTextFor(model => model.AppVersion.VersionCode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.VersionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DisplayTextFor(model => model.AppVersion.VersionName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("PublishDate", Model.LastUpdateTime.ToDateTimeStr(DateFormate.yyyyMMddHHmm), new { onClick = "WdatePicker({dateFmt:'yyyy-MM-dd HH:mm'})", @class = "input-medium" })
                <i class="icon-calendar bigger-110 green"></i>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    }
    else
    {
        <div class="form-group" id="：">
            @Html.Label("typeId", "绑定类型", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BindType", YeahAppCentre.Web.Utility.DropDownExtensions.GetSelectList(typeof(BindingType)))
            </div>
        </div>
        <div class="form-group" id="hotelIdDiv">
            @Html.LabelFor(model => model.HotelId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(m => m.HotelId, new { Id = "hotelIdCondition" })
                @Html.TextBox("hotelNameCondition", "", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AppVersion.App.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id, ViewBag.Apps as IEnumerable<SelectListItem>, htmlAttributes: new { @id = "Id" })
            </div>
        </div>
        @* App版本号 *@
        <div class="form-group">
            @Html.LabelFor(model => model.VersionCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VersionCode, ViewBag.DefaultSelect as IEnumerable<SelectListItem>, htmlAttributes: new { @class = "VersionCode" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.TextBoxFor(m => m.PublishDate, new { onClick = "WdatePicker({dateFmt:'yyyy-MM-dd HH:mm'})", @class = "input-medium", @value = DateTime.Now.ToDateTimeStr() })
                <i class="icon-calendar bigger-110 green"></i>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.CheckBoxFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
    }

}
@if (opType == OpType.View)
{
    <script>
        SetKeyReadonly();
    </script>
}
@if (opType == OpType.Add)
{
    @Scripts.Render("~/bundles/GetHotelNames");
    <script>
        GetHotelNames('@Url.Action("GetHotelNames", "Unity")', $("#hotelNameCondition"), $("#hotelIdCondition"));
    </script>
}